<Window
            x:Class="Mader_Control_System.MainWindow"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:local="clr-namespace:Mader_Control_System"
            Title="MainWindow" Height="900" Width="1500"
            WindowStartupLocation="CenterScreen"
            Background="Transparent"
            AllowsTransparency="True"
            WindowStyle="None">

    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    
    <Grid>
        <Border 
            Background="#F2F2F2" CornerRadius="10">

        </Border>

        <TextBlock Text="madersilva" FontFamily="Harabara Mais Demo" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="70" Margin="586,10,0,0" Foreground="#59595950"/>
        <TextBlock Text="madersilva" FontFamily="Harabara Mais Demo" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="70" Margin="0,7,0,0" Foreground="#FF182859"/>

        <Image Source="/assets/image/foreground.png"
        Stretch="Fill"
        HorizontalAlignment="Left"
        VerticalAlignment="Top" Width="1268" Height="676" Margin="119,172,0,0"/>

        <!-- NEW FILE AREA -->
        <Grid Name="NewFileArea" 
              Visibility="Collapsed" 
              Margin="0,153,0,0"
              HorizontalAlignment="Center"
              VerticalAlignment="Top"
              Width="1290" Height="700"
              Background="Transparent">

            <!-- fundo -->
            <Image Source="/assets/image/fundo1.png"
                   Stretch="Fill"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top" Width="1290" Height="700"/>

            <!-- Exemplo de TextBox e Label -->
            <TextBox Width="200" Height="30"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Top"
                     Margin="0,200,0,0"
                     
                      />

            <Label Content="Área de Orçamento"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,250,0,0"/>

            <!--  -->
        </Grid>

        <!-- USER AREA -->
        <Grid Name="UserArea" 
              Visibility="Collapsed"
              Margin="0,153,0,0"
              HorizontalAlignment="Center"
              VerticalAlignment="Top"
              Width="1290" Height="700"
              Background="Transparent">

            <!-- fundo -->
            <Image Source="/assets/image/fundo1.png"
                   Stretch="Fill"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top" Width="1290" Height="700"/>

            <Image Source="/assets/image/lateral_user.png"
                   Stretch="Fill"
                   Margin="46,50,954,30">

            </Image>

            <Image Source="/assets/image/fundo_user.png"
                 Stretch="Fill"
                 Width="878" Height="560"
                 Margin="374,57,38,83">

            </Image>

            <!-- BOTÕES LATERAIS -->
            
            <!-- BOTÃO CLIENTES -->
            <Grid>
                <ToggleButton x:Name="clientesButton" Content="CLIENTES" FontFamily="Montserrat Regular" FontSize="15" HorizontalContentAlignment="Center" Margin="46,147,994,513">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}" CornerRadius="0,5,5,0"  BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="33,0,0,0" />
                            </Border>
                        </ControlTemplate>
                    </ToggleButton.Template>
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Background" Value="#F2F2F2"/>
                            <Setter Property="Foreground" Value="#585858"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#D9D9D9"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Grid>

            <!-- BOTÃO PARCEIROS -->
            <Grid>
                <ToggleButton x:Name="parceirosButton" Content="PARCEIROS" FontFamily="Montserrat Regular" FontSize="15" HorizontalContentAlignment="Center" Margin="46,212,994,448">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}" CornerRadius="0,5,5,0"  BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="33,0,0,0" />
                            </Border>
                        </ControlTemplate>
                    </ToggleButton.Template>
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Background" Value="#F2F2F2"/>
                            <Setter Property="Foreground" Value="#585858"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#D9D9D9"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Grid>

            <!-- BOTÃO VENDEDORES -->
            <Grid>
                <ToggleButton x:Name="vendedoresButton" Content="VENDEDORES" FontFamily="Montserrat Regular" FontSize="15" HorizontalContentAlignment="Center" Margin="46,277,994,383">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}" CornerRadius="0,5,5,0"  BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="33,0,0,0" />
                            </Border>
                        </ControlTemplate>
                    </ToggleButton.Template>
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Background" Value="#F2F2F2"/>
                            <Setter Property="Foreground" Value="#585858"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#D9D9D9"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Grid>

            <!-- Conteúdo Clientes -->
            <Label Content="Nome" FontFamily="Montserrat Medium" FontSize="12" Foreground="#FF182859"
                     HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                Margin="420,70,0,0" Height="27"
                Visibility="{Binding IsChecked, ElementName=clientesButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBox Width="335" Height="24"
                     HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Margin="420,89,0,0"
                    FontFamily="Montserrat"
                    Background="LightGray"
                     TextAlignment="Left"
                     VerticalContentAlignment="Center"
                    Visibility="{Binding IsChecked, ElementName=clientesButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="5">
                                        <!-- Ajuste o valor para o grau de arredondamento desejado -->
                                        <ScrollViewer x:Name="PART_ContentHost" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>
            </TextBox>


            <!--  -->
        </Grid>


        <!-- HOME BUTTON -->
        <Image Source="/assets/image/home.png"
               Margin="514,101,954,767" Stretch="Fill"
               MouseLeftButtonDown="HomeButton_Click">

            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <!-- Trigger quando o mouse entra -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="28"/>
                            <Setter Property="Height" Value="28"/>
                        </Trigger>
                        <!-- Trigger quando o mouse sai (volta ao tamanho original) -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Width" Value="32"/>
                            <Setter Property="Height" Value="32"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <!-- NEW FILE BUTTON -->
        <Image Source="/assets/image/file-add.png"
               Margin="622,101,846,767" Stretch="Fill"
               MouseLeftButtonDown="FileAdd_MouseLeftButtonDown">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <!-- Trigger quando o mouse entra -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="28"/>
                            <Setter Property="Height" Value="28"/>
                        </Trigger>
                        <!-- Trigger quando o mouse sai (volta ao tamanho original) -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Width" Value="32"/>
                            <Setter Property="Height" Value="32"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <!-- USER BUTTON -->
        <Image Source="/assets/image/user.png"
               Margin="734,101,734,767" Stretch="Fill"
               MouseLeftButtonDown="UserPage_MouseLeftButtonDown">

            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <!-- Trigger quando o mouse entra -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="28"/>
                            <Setter Property="Height" Value="28"/>
                        </Trigger>
                        <!-- Trigger quando o mouse sai (volta ao tamanho original) -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Width" Value="32"/>
                            <Setter Property="Height" Value="32"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <!-- BOX BUTTON -->
        <Image Source="/assets/image/box.png"
               Margin="832,101,636,767" Stretch="Fill">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <!-- Trigger quando o mouse entra -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="28"/>
                            <Setter Property="Height" Value="28"/>
                        </Trigger>
                        <!-- Trigger quando o mouse sai (volta ao tamanho original) -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Width" Value="32"/>
                            <Setter Property="Height" Value="32"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <!-- SETTINGS BUTTON -->
        <Image Source="/assets/image/settings.png"
               Margin="934,101,534,767" Stretch="Fill">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <!-- Trigger quando o mouse entra -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="28"/>
                            <Setter Property="Height" Value="28"/>
                        </Trigger>
                        <!-- Trigger quando o mouse sai (volta ao tamanho original) -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Width" Value="32"/>
                            <Setter Property="Height" Value="32"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <!-- CLOSE BUTTON -->
        <Image Source="/assets/image/cross-small.png" 
               Margin="1460,10,10,860" Stretch="Fill"
               MouseLeftButtonDown="Close_MouseLeftButtonDown">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <!-- Trigger quando o mouse entra -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="28"/>
                            <Setter Property="Height" Value="28"/>
                        </Trigger>
                        <!-- Trigger quando o mouse sai (volta ao tamanho original) -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Width" Value="30"/>
                            <Setter Property="Height" Value="30"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <!-- MINIMIZE BUTTON -->
        <Image Source="/assets/image/minus-small.png" 
               Margin="1425,10,45,860" Stretch="Fill"
               MouseLeftButtonDown="Minimized_MouseLeftButtonDown">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <!-- Trigger quando o mouse entra -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="25"/>
                            <Setter Property="Height" Value="25"/>
                        </Trigger>
                        <!-- Trigger quando o mouse sai (volta ao tamanho original) -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Width" Value="30"/>
                            <Setter Property="Height" Value="30"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>



    </Grid>
</Window>
